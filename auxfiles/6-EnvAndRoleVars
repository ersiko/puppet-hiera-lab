SIXTH STEP: MIXING ENVIRONMENT AND ROLE FOR VARIABLES

Ok, now we have our apache servers running, and we want them to connect to mysql. Our app has a config file where we put the connection string. But the dev webservers must connect to the dev mysql servers, and the prod webservers to the prod mysql. And we can't use only the "env" facter, because each environment has other roles than webservers. How can we fix that? Easy, just mixing "env" and "roles" facters.

No new puppet modules will be used for this step.

Again, no new facters. The changes are in:

/etc/puppet/hiera.yaml: There's a new line for the env/role origin (remember to restart puppetmaster after changing hiera.xml file).
/etc/puppet/modules/webpage/manifests/init.pp: We're adding a new parameter for our class "webpage" for the connection string.
/etc/puppet/data/modules/webpage/templates/index.html.erb: We're adding the connection string to the webpage so we can confirm it's working.
/etc/puppet/data/env/prod/role/webserver.yaml: Just adding the webpage::connection_string variable, setting it to connect to a prod server.
/etc/puppet/data/env/dev/role/webserver.yaml: Just adding the webpage::connection_string variable, setting it to connect to a dev server.


Now you can check all prod an dev servers how they get their own mysql server to connect to.